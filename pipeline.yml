groups: []
resources:
- name: cflinuxfs2-rootfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release
- name: cg-s3-nessus-agent-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: nessus-agent-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}
- name: cg-s3-fisma-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: fisma-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}
- name: cg-s3-newrelic-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: newrelic-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}
- name: cg-s3-collectd-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: collectd-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}
- name: cg-s3-tripwire-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: tripwire-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}
- name: cg-s3-awslogs-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: awslogs-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}
- name: common-staging
  type: cg-common
  source:
    access_key_id: {{ci-access-key-id}}
    bosh_cert: bosh.pem
    bucket_name: {{diego-private-staging-bucket}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: diego-staging.yml
    secrets_passphrase: {{diego-private-staging-passphrase}}
    region: {{aws-region}}
- name: common-prod
  type: cg-common
  source:
    bucket_name: {{diego-private-prod-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: diego.yml
    secrets_passphrase: {{diego-private-prod-passphrase}}
    bosh_cert: bosh.pem
    region: {{aws-region}}
- name: diego-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{diego-deployment-prod-bosh-target}}
    username: {{diego-deployment-prod-bosh-username}}
    password: {{diego-deployment-prod-bosh-password}}
    deployment: {{diego-deployment-prod-bosh-deployment}}
    ignore_ssl: true
- name: diego-manifests
  type: git
  source:
    uri: {{diego-manifests-git-url}}
    branch: master
    paths:
    - diego-*.yml
    - generate*
- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: diego-release-repo
  type: git
  source:
    uri: {{diego-release-repo-git-url}}
    branch: master
    paths:
    - releases/diego-*.yml
- name: diego-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{diego-deployment-staging-bosh-target}}
    username: {{diego-deployment-staging-bosh-username}}
    password: {{diego-deployment-staging-bosh-password}}
    deployment: {{diego-deployment-staging-bosh-deployment}}
    ignore_ssl: true
- name: diego-stemcell
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}
- name: garden-linux-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-linux-release
- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: master
- name: prodbosh-certificate
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{diego-private-prod-bucket}}
    private: true
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}
    versioned_file: bosh.pem
- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}
- name: stagingbosh-certificate
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{diego-private-staging-bucket}}
    private: true
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}
    versioned_file: bosh.pem
resource_types:
- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource
- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
jobs:
- name: deploy-diego-staging
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: diego-manifests
      trigger: true
    - get: diego-release-repo
      params: {submodules: none}
      trigger: true
    - get: common-staging
      trigger: true
    - get: diego-stemcell
      trigger: true
    - get: cg-s3-nessus-agent-release
      trigger: true
    - get: cg-s3-fisma-release
      trigger: true
    - get: cg-s3-newrelic-release
      trigger: true
    - get: cg-s3-collectd-release
      trigger: true
    - get: cg-s3-tripwire-release
      trigger: true
    - get: cg-s3-awslogs-release
      trigger: true
    - get: diego-release
      trigger: true
    - get: cflinuxfs2-rootfs-release
      trigger: true
    - get: garden-linux-release
      trigger: true
    - get: stagingbosh-certificate
      trigger: true
  - aggregate:
    - task: upload-cflinuxfs2-rootfs-release
      file: pipeline-tasks/upload-release.yml
      input_mapping:
        release: cflinuxfs2-rootfs-release
        certificate: stagingbosh-certificate
      params:
        BOSH_USERNAME: {{diego-deployment-staging-bosh-username}}
        BOSH_PASSWORD: {{diego-deployment-staging-bosh-password}}
        BOSH_TARGET: {{diego-deployment-staging-bosh-target}}
        BOSH_CERT: bosh.pem
    - task: upload-garden-linux-release
      file: pipeline-tasks/upload-release.yml
      input_mapping:
        release: garden-linux-release
        certificate: stagingbosh-certificate
      params:
        BOSH_USERNAME: {{diego-deployment-staging-bosh-username}}
        BOSH_PASSWORD: {{diego-deployment-staging-bosh-password}}
        BOSH_TARGET: {{diego-deployment-staging-bosh-target}}
        BOSH_CERT: bosh.pem
    - task: generate-diego-stage-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: 18fgsa/concourse-task
        inputs:
        - name: common-staging
        - name: diego-manifests
        - name: diego-release-repo
        run:
          path: diego-manifests/generate.sh
          args:
          - common-staging/secrets.yml
          - {{cf-deployment-staging}}
          - {{diego-deployment-staging-bosh-cacert}}
          - {{diego-deployment-staging-bosh-target}}
          - {{diego-deployment-staging-bosh-username}}
          - {{diego-deployment-staging-bosh-password}}
          - instance-count-overrides-staging.yml
          - generate-diego-stage-manifest/diego-staging-manifest.yml
        outputs:
        - name: generate-diego-stage-manifest
  - put: diego-staging-deployment
    params:
      cert: {{diego-deployment-staging-bosh-cacert}}
      manifest: generate-diego-stage-manifest/diego-staging-manifest.yml
      stemcells:
        - diego-stemcell/*.tgz
      releases:
        - diego-release/*.tgz
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed Diego on staging
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy Diego on staging
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
- name: deploy-diego-production
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: diego-staging-deployment
      passed: [deploy-diego-staging]
      trigger: true
    - get: diego-manifests
      trigger: true
      passed: [deploy-diego-staging]
    - get: diego-release-repo
      params: {submodules: none}
      trigger: true
      passed: [deploy-diego-staging]
    - get: common-prod
      trigger: true
    - get: diego-stemcell
      trigger: true
      passed: [deploy-diego-staging]
    - get: cg-s3-nessus-agent-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: cg-s3-fisma-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: cg-s3-newrelic-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: cg-s3-collectd-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: cg-s3-tripwire-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: cg-s3-awslogs-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: diego-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: cflinuxfs2-rootfs-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: garden-linux-release
      trigger: true
      passed: [deploy-diego-staging]
    - get: prodbosh-certificate
      trigger: true
  - aggregate:
    - task: upload-cflinuxfs2-rootfs-release
      file: pipeline-tasks/upload-release.yml
      input_mapping:
        release: cflinuxfs2-rootfs-release
        certificate: prodbosh-certificate
      params:
        BOSH_USERNAME: {{diego-deployment-prod-bosh-username}}
        BOSH_PASSWORD: {{diego-deployment-prod-bosh-password}}
        BOSH_TARGET: {{diego-deployment-prod-bosh-target}}
        BOSH_CERT: bosh.pem
    - task: upload-garden-linux-release
      file: pipeline-tasks/upload-release.yml
      input_mapping:
        release: garden-linux-release
        certificate: prodbosh-certificate
      params:
        BOSH_USERNAME: {{diego-deployment-prod-bosh-username}}
        BOSH_PASSWORD: {{diego-deployment-prod-bosh-password}}
        BOSH_TARGET: {{diego-deployment-prod-bosh-target}}
        BOSH_CERT: bosh.pem
    - task: generate-diego-prod-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: 18fgsa/concourse-task
        inputs:
        - name: common-prod
        - name: diego-manifests
        - name: diego-release-repo
        run:
          path: diego-manifests/generate.sh
          args:
          - common-prod/secrets.yml
          - {{cf-deployment-prod}}
          - {{diego-deployment-prod-bosh-cacert}}
          - {{diego-deployment-prod-bosh-target}}
          - {{diego-deployment-prod-bosh-username}}
          - {{diego-deployment-prod-bosh-password}}
          - instance-count-overrides.yml
          - generate-diego-prod-manifest/diego-prod-manifest.yml
        outputs:
        - name: generate-diego-prod-manifest
  - put: diego-production-deployment
    params:
      cert: {{diego-deployment-prod-bosh-cacert}}
      manifest: generate-diego-prod-manifest/diego-prod-manifest.yml
      stemcells:
        - diego-stemcell/*.tgz
      releases:
        - diego-release/*.tgz
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed Diego on production
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy Diego on production
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
